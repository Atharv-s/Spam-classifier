import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer,TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score
import string
import matplotlib.pyplot as plt
%matplotlib inline



dset = pd.read_csv("spam.tsv", sep='\t', names=['Class','Message'] , engine='python', error_bad_lines=False)
dset.head(8)


dinfo=dset.info()
dinfo


dset.describe()


dset['Length'] = dset['Message'].apply(len)


dset['Length'] = dset['Message'].apply(len)


dset.head(8)


dset.groupby('Class').count()


dset['Length'].describe()



dObject = dset['Class'].values
dObject


dset.loc[dset['Class']=="ham","Class"] = 1


dset.loc[dset['Class']=="spam","Class"] = 0


dObject2=dset['Class'].values
dObject2


dset.head(8)


#clean message from punctuations
def cleanMessage(message):
    nonPunc = [char for char in message if char not in string.punctuation]
    nonPunc = "".join(nonPunc)
    return nonPunc


dset['Message'] = dset['Message'].apply(cleanMessage)


dset.head(8)


CV = CountVectorizer(stop_words="english")


xSet = dset['Message'].values
ySet = dset['Class'].values


xSet_train,xSet_test,ySet_train,ySet_test = train_test_split(xSet,ySet,test_size=0.2)


xSet_train_CV = CV.fit_transform(xSet_train)


NB = MultinomialNB()


NB.fit(xSet_train_CV,ySet_train)


xSet_test_CV = CV.transform(xSet_test)


ySet_predict = NB.predict(xSet_test_CV)


ySet_predict = NB.predict(xSet_test_CV)


print("Prediction Accuracy :",accuracyScore)


msg = input("Enter Message: ")
msgInput = CV.transform([msg])
predict = NB.predict(msgInput)
if(predict[0]==0):
    print("------------------------This message is spam---------------------------")
else:
    print("---------------------------This message is ham------------------------------")


